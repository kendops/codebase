apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
data:
  context: |
    argocdUrl: https://cd.apps.argoproj.io

  trigger.sync-operation-change: |
    - when: app.status.operationState.phase in ['Succeeded']
      send: [github-commit-status, app-sync-succeeded]
    - when: app.status.operationState.phase in ['Running']
      send: [github-commit-status, app-sync-running]
    - when: app.status.operationState.phase in ['Error', 'Failed']
      send: [github-commit-status, app-sync-failed]

  template.github-commit-status: |
    description: Generates Github webhook payload
    webhook:
      github:
        method: POST
        path: /repos/{{call .repo.FullNameByRepoURL .app.spec.source.repoURL}}/statuses/{{.app.status.operationState.operation.sync.revision}}
        body: |
          {
            {{if eq .app.status.operationState.phase "Running"}} "state": "pending"{{end}}
            {{if eq .app.status.operationState.phase "Succeeded"}} "state": "success"{{end}}
            {{if eq .app.status.operationState.phase "Error"}} "state": "error"{{end}}
            {{if eq .app.status.operationState.phase "Failed"}} "state": "error"{{end}},
            "description": "ArgoCD",
            "target_url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
            "context": "continuous-delivery/{{.app.metadata.name}}"
          }

  service.slack: |
    token: $slack-token
    signingSecret: $slack-signing-secret
  
  service.grafana: |
    apiUrl: https://grafana.apps.argoproj.io/api
    apiKey: $grafana-token

  # service.webhook.github: |
  #   url: https://api.github.com
  #   headers: #optional headers
  #   - name: Authorization
  #     value: token $github-token

  service.webhook.github: |
    url: git@github.com:kendops/wordpress.git
    headers: #optional headers
    - name: Authorization
      value: token wordpress


# https://wearenotch.com/email-notifications-and-github-webhooks-with-argo-cd/

### Install Argo CD notifications
# Install Argo CD notifications controller that is responsible for the processing notifications
# kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj-labs/argocd-notifications/release-1.0/manifests/install.yaml

### Install triggers and templates from the catalog 
# kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj-labs/argocd-notifications/release-1.0/catalog/install.yaml

### Email
# The Email notification service sends emails using SMTP protocol. The following parameters should be set: host, port, username, password, from.
# Store email account username and password in argocd-notifications-secret:

